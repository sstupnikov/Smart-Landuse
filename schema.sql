-- Database generated with pgModeler (PostgreSQL Database Modeler).
-- pgModeler  version: 0.9.3
-- PostgreSQL version: 13.0
-- Project Site: pgmodeler.io
-- Model Author: ---

-- Database creation must be performed outside a multi lined SQL file. 
-- These commands were put in this file only as a convenience.
-- 
-- object: smart_landuse_db | type: DATABASE --
-- DROP DATABASE IF EXISTS smart_landuse_db;
CREATE DATABASE smart_landuse_db;
-- ddl-end --


-- object: data | type: SCHEMA --
-- DROP SCHEMA IF EXISTS data CASCADE;
CREATE SCHEMA data;
-- ddl-end --
ALTER SCHEMA data OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry | type: SCHEMA --
-- DROP SCHEMA IF EXISTS agroecological_group_registry CASCADE;
CREATE SCHEMA agroecological_group_registry;
-- ddl-end --
ALTER SCHEMA agroecological_group_registry OWNER TO postgres;
-- ddl-end --

-- object: crop_cultivar_registry | type: SCHEMA --
-- DROP SCHEMA IF EXISTS crop_cultivar_registry CASCADE;
CREATE SCHEMA crop_cultivar_registry;
-- ddl-end --
ALTER SCHEMA crop_cultivar_registry OWNER TO postgres;
-- ddl-end --
COMMENT ON SCHEMA crop_cultivar_registry IS E'Реестр сортов культур';
-- ddl-end --

-- object: economic_parameters | type: SCHEMA --
-- DROP SCHEMA IF EXISTS economic_parameters CASCADE;
CREATE SCHEMA economic_parameters;
-- ddl-end --
ALTER SCHEMA economic_parameters OWNER TO postgres;
-- ddl-end --
COMMENT ON SCHEMA economic_parameters IS E'Хозяйственно-экономические параметры использования агроэкологических видов земель';
-- ddl-end --

-- object: agricultural_technologies_registry | type: SCHEMA --
-- DROP SCHEMA IF EXISTS agricultural_technologies_registry CASCADE;
CREATE SCHEMA agricultural_technologies_registry;
-- ddl-end --
ALTER SCHEMA agricultural_technologies_registry OWNER TO postgres;
-- ddl-end --
COMMENT ON SCHEMA agricultural_technologies_registry IS E'Регистр базовых агротехнологий';
-- ddl-end --

SET search_path TO pg_catalog,public,data,agroecological_group_registry,crop_cultivar_registry,economic_parameters,agricultural_technologies_registry;
-- ddl-end --

-- object: agroecological_group_registry."AE_TYPE" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."AE_TYPE" CASCADE;
CREATE TABLE agroecological_group_registry."AE_TYPE" (
	ae_type_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	ae_group_id bigint,
	name varchar,
	CONSTRAINT "AE_SOIL_TYPE_pk" PRIMARY KEY (ae_type_id)

);
-- ddl-end --
COMMENT ON TABLE agroecological_group_registry."AE_TYPE" IS E'Агроэкологический вид земель';
-- ddl-end --
ALTER TABLE agroecological_group_registry."AE_TYPE" OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry."AE_TYPE_PROPERTY" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."AE_TYPE_PROPERTY" CASCADE;
CREATE TABLE agroecological_group_registry."AE_TYPE_PROPERTY" (
	ae_type_id bigint NOT NULL,
	name varchar NOT NULL,
	units varchar,
	value numrange,
	CONSTRAINT "AE_TYPE_PROPERTY_pk" PRIMARY KEY (ae_type_id,name)

);
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."AE_TYPE_PROPERTY".name IS E'Название параметра';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."AE_TYPE_PROPERTY".units IS E'Единицы измерения';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."AE_TYPE_PROPERTY".value IS E'Диапозон значение';
-- ddl-end --
ALTER TABLE agroecological_group_registry."AE_TYPE_PROPERTY" OWNER TO postgres;
-- ddl-end --

-- object: economic_parameters."PROVINCE_TECHNOLOGY_CROP" | type: TABLE --
-- DROP TABLE IF EXISTS economic_parameters."PROVINCE_TECHNOLOGY_CROP" CASCADE;
CREATE TABLE economic_parameters."PROVINCE_TECHNOLOGY_CROP" (
	zone_name varchar NOT NULL,
	province_name varchar NOT NULL,
	crop_name varchar NOT NULL,
	technology_level varchar NOT NULL,
	crop_cultivars varchar[],
	CONSTRAINT "PROVINCE_CROP_pk" PRIMARY KEY (province_name,crop_name,technology_level,zone_name)

);
-- ddl-end --
COMMENT ON TABLE economic_parameters."PROVINCE_TECHNOLOGY_CROP" IS E'технологии-сорта';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."PROVINCE_TECHNOLOGY_CROP".zone_name IS E'Название зоны';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."PROVINCE_TECHNOLOGY_CROP".province_name IS E'Название провинции';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."PROVINCE_TECHNOLOGY_CROP".crop_name IS E'Название культуры';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."PROVINCE_TECHNOLOGY_CROP".technology_level IS E'Уровень технологий';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."PROVINCE_TECHNOLOGY_CROP".crop_cultivars IS E'Список сортов культуры';
-- ddl-end --
ALTER TABLE economic_parameters."PROVINCE_TECHNOLOGY_CROP" OWNER TO postgres;
-- ddl-end --

-- object: economic_parameters."SOIL_TYPE_TECHNOLOGY" | type: TABLE --
-- DROP TABLE IF EXISTS economic_parameters."SOIL_TYPE_TECHNOLOGY" CASCADE;
CREATE TABLE economic_parameters."SOIL_TYPE_TECHNOLOGY" (
	zone_name varchar NOT NULL,
	province_name varchar NOT NULL,
	ae_type varchar NOT NULL,
	technology_level varchar NOT NULL,
	crop_name varchar NOT NULL,
	harvest float,
	cost float,
	CONSTRAINT "PROVINCE_TECHNOLOGY_pk" PRIMARY KEY (province_name,technology_level,ae_type,crop_name,zone_name)

);
-- ddl-end --
COMMENT ON TABLE economic_parameters."SOIL_TYPE_TECHNOLOGY" IS E'земли-технологии';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."SOIL_TYPE_TECHNOLOGY".zone_name IS E'Зона';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."SOIL_TYPE_TECHNOLOGY".province_name IS E'Название провинции';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."SOIL_TYPE_TECHNOLOGY".ae_type IS E'Агроэкологический вид земель';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."SOIL_TYPE_TECHNOLOGY".technology_level IS E'Уровень технологий';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."SOIL_TYPE_TECHNOLOGY".crop_name IS E'Название культуры';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."SOIL_TYPE_TECHNOLOGY".harvest IS E'Урожайность, т/га';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."SOIL_TYPE_TECHNOLOGY".cost IS E'Себестоимость, руб./т';
-- ddl-end --
ALTER TABLE economic_parameters."SOIL_TYPE_TECHNOLOGY" OWNER TO postgres;
-- ddl-end --

-- object: crop_cultivar_registry."CROP_CULTIVAR" | type: TABLE --
-- DROP TABLE IF EXISTS crop_cultivar_registry."CROP_CULTIVAR" CASCADE;
CREATE TABLE crop_cultivar_registry."CROP_CULTIVAR" (
	crop_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	crop_name varchar,
	crop_cultivar varchar,
	zoning_year smallint,
	variety varchar,
	usage varchar,
	CONSTRAINT "CROP_CULTIVAR_pk" PRIMARY KEY (crop_id)

);
-- ddl-end --
COMMENT ON TABLE crop_cultivar_registry."CROP_CULTIVAR" IS E'Сорт культуры';
-- ddl-end --
COMMENT ON COLUMN crop_cultivar_registry."CROP_CULTIVAR".crop_name IS E'Название культуры';
-- ddl-end --
COMMENT ON COLUMN crop_cultivar_registry."CROP_CULTIVAR".crop_cultivar IS E'Название сорта';
-- ddl-end --
COMMENT ON COLUMN crop_cultivar_registry."CROP_CULTIVAR".zoning_year IS E'Год районирования';
-- ddl-end --
COMMENT ON COLUMN crop_cultivar_registry."CROP_CULTIVAR".variety IS E'Разновидность';
-- ddl-end --
COMMENT ON COLUMN crop_cultivar_registry."CROP_CULTIVAR".usage IS E'Назначение использования';
-- ddl-end --
ALTER TABLE crop_cultivar_registry."CROP_CULTIVAR" OWNER TO postgres;
-- ddl-end --

-- object: crop_cultivar_registry."CROP_CULTIVAR_PROPERTY" | type: TABLE --
-- DROP TABLE IF EXISTS crop_cultivar_registry."CROP_CULTIVAR_PROPERTY" CASCADE;
CREATE TABLE crop_cultivar_registry."CROP_CULTIVAR_PROPERTY" (
	crop_cultivar varchar NOT NULL,
	crop_id bigint NOT NULL,
	indicator varchar NOT NULL,
	value varchar,
	CONSTRAINT "CROP_CULTIVAR_PROPERTY_pk" PRIMARY KEY (indicator,crop_id,crop_cultivar)

);
-- ddl-end --
COMMENT ON COLUMN crop_cultivar_registry."CROP_CULTIVAR_PROPERTY".crop_cultivar IS E'Название сорта культуры';
-- ddl-end --
COMMENT ON COLUMN crop_cultivar_registry."CROP_CULTIVAR_PROPERTY".indicator IS E'Название свойства';
-- ddl-end --
COMMENT ON COLUMN crop_cultivar_registry."CROP_CULTIVAR_PROPERTY".value IS E'Значение свойства';
-- ddl-end --
ALTER TABLE crop_cultivar_registry."CROP_CULTIVAR_PROPERTY" OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry."AE_GROUP" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."AE_GROUP" CASCADE;
CREATE TABLE agroecological_group_registry."AE_GROUP" (
	ae_group_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	name varchar,
	description varchar,
	CONSTRAINT "AE_SOIL_GROUP_pk" PRIMARY KEY (ae_group_id)

);
-- ddl-end --
COMMENT ON TABLE agroecological_group_registry."AE_GROUP" IS E'Агроэкологическая группа земель';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."AE_GROUP".name IS E'Название Агроэкологической группы земель';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."AE_GROUP".description IS E'Описание';
-- ddl-end --
ALTER TABLE agroecological_group_registry."AE_GROUP" OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry."PROVINCE" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."PROVINCE" CASCADE;
CREATE TABLE agroecological_group_registry."PROVINCE" (
	province_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	zone_id bigint,
	name varchar,
	geomorphology varchar,
	climate varchar,
	CONSTRAINT "PROVINCE_pk" PRIMARY KEY (province_id)

);
-- ddl-end --
COMMENT ON TABLE agroecological_group_registry."PROVINCE" IS E'Провинция';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."PROVINCE".name IS E'Название провинции';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."PROVINCE".geomorphology IS E'Геоморфология';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."PROVINCE".climate IS E'Климат';
-- ddl-end --
ALTER TABLE agroecological_group_registry."PROVINCE" OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry."ZONE" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."ZONE" CASCADE;
CREATE TABLE agroecological_group_registry."ZONE" (
	zone_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	name varchar,
	CONSTRAINT "ZONE_pk" PRIMARY KEY (zone_id)

);
-- ddl-end --
COMMENT ON TABLE agroecological_group_registry."ZONE" IS E'Зона';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."ZONE".name IS E'Название зоны';
-- ddl-end --
ALTER TABLE agroecological_group_registry."ZONE" OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry."ADMINISTRATIVE_DISTRICT" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."ADMINISTRATIVE_DISTRICT" CASCADE;
CREATE TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT" (
	administrative_district_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	administrative_region_id bigint,
	name varchar,
	CONSTRAINT "ADMINISTRATIVE_DISTRICT_pk_cp" PRIMARY KEY (administrative_district_id)

);
-- ddl-end --
COMMENT ON TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT" IS E'Район области';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."ADMINISTRATIVE_DISTRICT".administrative_region_id IS E'Название области';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."ADMINISTRATIVE_DISTRICT".name IS E'Название района';
-- ddl-end --
ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT" OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry."ADMINISTRATIVE_REGION" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."ADMINISTRATIVE_REGION" CASCADE;
CREATE TABLE agroecological_group_registry."ADMINISTRATIVE_REGION" (
	administrative_region_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	name varchar,
	CONSTRAINT "ADMINISTRATIVE_REGION_pk_cp" PRIMARY KEY (administrative_region_id)

);
-- ddl-end --
COMMENT ON TABLE agroecological_group_registry."ADMINISTRATIVE_REGION" IS E'Область';
-- ddl-end --
COMMENT ON COLUMN agroecological_group_registry."ADMINISTRATIVE_REGION".name IS E'Название области';
-- ddl-end --
ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_REGION" OWNER TO postgres;
-- ddl-end --

-- object: agricultural_technologies_registry."AGROTECHNOLOGY" | type: TABLE --
-- DROP TABLE IF EXISTS agricultural_technologies_registry."AGROTECHNOLOGY" CASCADE;
CREATE TABLE agricultural_technologies_registry."AGROTECHNOLOGY" (
	agrotechnology_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	name varchar,
	site varchar,
	zone_name varchar,
	province_name varchar,
	administrative_regions varchar[],
	crop_name varchar,
	technology_level varchar,
	crop_potential varchar,
	labor_productivity varchar,
	guaranteed_harvest varchar,
	cost varchar,
	main_product_type varchar,
	main_product_purpose varchar,
	side_product_type varchar,
	side_product_purpose varchar,
	quality_indicator_gost varchar,
	quality_indicator_max_gluten varchar,
	quality_indicator_nature varchar,
	quality_indicator_max_humidity varchar,
	selling_way varchar,
	market_demand_level varchar,
	ae_type_list varchar[],
	precursors varchar[],
	recommended_cultivars varchar[],
	seed_preparation varchar,
	CONSTRAINT "AGROTECHNOLOGY_pk" PRIMARY KEY (agrotechnology_id)

);
-- ddl-end --
COMMENT ON TABLE agricultural_technologies_registry."AGROTECHNOLOGY" IS E'Агротехнологии';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".name IS E'Название агротехнологии';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".site IS E'Место';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".zone_name IS E'Название зоны';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".province_name IS E'Название провинции';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".administrative_regions IS E'Регионы';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".crop_name IS E'Культура';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".technology_level IS E'Уровень технологий';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".crop_potential IS E'Реализация потенциала сорта, %';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".labor_productivity IS E'Производительность труда, чел-час/т';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".guaranteed_harvest IS E'Гарантированная урожайность, т/га';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".cost IS E'Себестоимость, руб./т';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".main_product_type IS E'Тип основной продукции';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".main_product_purpose IS E'Назначение основной продукции';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".side_product_type IS E'Тип побочной продукции';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".side_product_purpose IS E'Назанчение побочной продукции';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".quality_indicator_gost IS E'Показатели качества (ГОСТ)';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".quality_indicator_max_gluten IS E'Показатели качества (Максимальное содрежание клейковины)';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".quality_indicator_nature IS E'Показатели качества (Натура)';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".quality_indicator_max_humidity IS E'Показатели качества (Мксимальная влажность)';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".selling_way IS E'Способ реализации';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".market_demand_level IS E'Уровень спроса на рынке';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".ae_type_list IS E'Агроэкологические виды земель';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".precursors IS E'Предшественники';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".recommended_cultivars IS E'Рекомендуемые сорта';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."AGROTECHNOLOGY".seed_preparation IS E'Подготовка семян';
-- ddl-end --
ALTER TABLE agricultural_technologies_registry."AGROTECHNOLOGY" OWNER TO postgres;
-- ddl-end --

-- object: agricultural_technologies_registry."PRECURSORS" | type: TABLE --
-- DROP TABLE IF EXISTS agricultural_technologies_registry."PRECURSORS" CASCADE;
CREATE TABLE agricultural_technologies_registry."PRECURSORS" (
	name varchar NOT NULL,
	group_name varchar,
	CONSTRAINT predecessors_pk PRIMARY KEY (name)

);
-- ddl-end --
COMMENT ON TABLE agricultural_technologies_registry."PRECURSORS" IS E'Предшественники';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."PRECURSORS".name IS E'Название предшественника';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."PRECURSORS".group_name IS E'Группа предшественников';
-- ddl-end --
ALTER TABLE agricultural_technologies_registry."PRECURSORS" OWNER TO postgres;
-- ddl-end --

-- object: agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES" | type: TABLE --
-- DROP TABLE IF EXISTS agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES" CASCADE;
CREATE TABLE agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES" (
	agrotechnology_id bigint NOT NULL,
	name varchar NOT NULL,
	type varchar NOT NULL,
	quantity varchar,
	units varchar,
	CONSTRAINT "TECHNOLOGY_INTENSIFICATION_RESOURCES_pk" PRIMARY KEY (agrotechnology_id,name,type)

);
-- ddl-end --
COMMENT ON TABLE agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES" IS E'Ресурсы интенсификации технологий';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES".name IS E'Название ресурса (Минеральные удобрения, Пестициды, Гебициды, Фунгицыды, Инсектициды, Ретардант, Известкование, Органические удобрения)';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES".type IS E'Тип ресурса';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES".quantity IS E'Количество';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES".units IS E'Единицы измерения';
-- ddl-end --
ALTER TABLE agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES" OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry."PROVINCE_AE_TYPE" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."PROVINCE_AE_TYPE" CASCADE;
CREATE TABLE agroecological_group_registry."PROVINCE_AE_TYPE" (
	province_id bigint,
	ae_type_id bigint
);
-- ddl-end --
ALTER TABLE agroecological_group_registry."PROVINCE_AE_TYPE" OWNER TO postgres;
-- ddl-end --

-- object: agricultural_technologies_registry."TECHNOLOGY_OPERATIONS" | type: TABLE --
-- DROP TABLE IF EXISTS agricultural_technologies_registry."TECHNOLOGY_OPERATIONS" CASCADE;
CREATE TABLE agricultural_technologies_registry."TECHNOLOGY_OPERATIONS" (
	technology_operation_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ,
	agrotechnology_id bigint,
	process varchar,
	operation varchar,
	index smallint,
	technology_parameters varchar,
	"time" varchar,
	equipment varchar,
	CONSTRAINT "TECHNOLOGY_OPERATIONS_pk" PRIMARY KEY (technology_operation_id)

);
-- ddl-end --
COMMENT ON TABLE agricultural_technologies_registry."TECHNOLOGY_OPERATIONS" IS E'Операции агротехнологий';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_OPERATIONS".process IS E'Процесс';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_OPERATIONS".operation IS E'Операция';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_OPERATIONS".index IS E'Порядковый номер операции';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_OPERATIONS".technology_parameters IS E'Технологические параметры';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_OPERATIONS"."time" IS E'Сроки';
-- ddl-end --
COMMENT ON COLUMN agricultural_technologies_registry."TECHNOLOGY_OPERATIONS".equipment IS E'Техника';
-- ddl-end --
ALTER TABLE agricultural_technologies_registry."TECHNOLOGY_OPERATIONS" OWNER TO postgres;
-- ddl-end --

-- object: economic_parameters."TECHNOLOGY_LEVEL" | type: TABLE --
-- DROP TABLE IF EXISTS economic_parameters."TECHNOLOGY_LEVEL" CASCADE;
CREATE TABLE economic_parameters."TECHNOLOGY_LEVEL" (
	technology_level varchar NOT NULL,
	index smallint,
	CONSTRAINT "TECHNOLOGY_LEVEL_pk" PRIMARY KEY (technology_level)

);
-- ddl-end --
COMMENT ON TABLE economic_parameters."TECHNOLOGY_LEVEL" IS E'Словарь уровней технологий';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."TECHNOLOGY_LEVEL".technology_level IS E'Уровень технологии';
-- ddl-end --
COMMENT ON COLUMN economic_parameters."TECHNOLOGY_LEVEL".index IS E'Порядковый номер';
-- ddl-end --
ALTER TABLE economic_parameters."TECHNOLOGY_LEVEL" OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry."ADMINISTRATIVE_REGION_ZONE" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."ADMINISTRATIVE_REGION_ZONE" CASCADE;
CREATE TABLE agroecological_group_registry."ADMINISTRATIVE_REGION_ZONE" (
	administrative_region_id bigint NOT NULL,
	zone_id bigint NOT NULL,
	CONSTRAINT "ADMINISTRATIVE_REGION_ZONE_pk" PRIMARY KEY (administrative_region_id,zone_id)

);
-- ddl-end --
ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_REGION_ZONE" OWNER TO postgres;
-- ddl-end --

-- object: agroecological_group_registry."ADMINISTRATIVE_DISTRICT_PROVINCE" | type: TABLE --
-- DROP TABLE IF EXISTS agroecological_group_registry."ADMINISTRATIVE_DISTRICT_PROVINCE" CASCADE;
CREATE TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT_PROVINCE" (
	administrative_district_id bigint NOT NULL,
	province_id bigint NOT NULL,
	CONSTRAINT "ADMINISTRATIVE_DISTRICT_PROVINCE_pk" PRIMARY KEY (administrative_district_id,province_id)

);
-- ddl-end --
ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT_PROVINCE" OWNER TO postgres;
-- ddl-end --

-- object: data."FIELD_AE_TYPE" | type: TABLE --
-- DROP TABLE IF EXISTS data."FIELD_AE_TYPE" CASCADE;
CREATE TABLE data."FIELD_AE_TYPE" (
	agrostation_name varchar,
	field_name varchar,
	zone_name varchar,
	province_name varchar,
	ae_group varchar,
	ae_type varchar,
	area float
);
-- ddl-end --
COMMENT ON COLUMN data."FIELD_AE_TYPE".agrostation_name IS E'Хозяйство';
-- ddl-end --
COMMENT ON COLUMN data."FIELD_AE_TYPE".field_name IS E'Название участка поля';
-- ddl-end --
COMMENT ON COLUMN data."FIELD_AE_TYPE".zone_name IS E'Название зоны';
-- ddl-end --
COMMENT ON COLUMN data."FIELD_AE_TYPE".province_name IS E'Название провинции';
-- ddl-end --
COMMENT ON COLUMN data."FIELD_AE_TYPE".ae_group IS E'Агроэкологическая группа земель';
-- ddl-end --
COMMENT ON COLUMN data."FIELD_AE_TYPE".ae_type IS E'Агроэкологический вид земель';
-- ddl-end --
COMMENT ON COLUMN data."FIELD_AE_TYPE".area IS E'Площадь участка';
-- ddl-end --
ALTER TABLE data."FIELD_AE_TYPE" OWNER TO postgres;
-- ddl-end --

-- object: fk_ae_group | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."AE_TYPE" DROP CONSTRAINT IF EXISTS fk_ae_group CASCADE;
ALTER TABLE agroecological_group_registry."AE_TYPE" ADD CONSTRAINT fk_ae_group FOREIGN KEY (ae_group_id)
REFERENCES agroecological_group_registry."AE_GROUP" (ae_group_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_ae_type | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."AE_TYPE_PROPERTY" DROP CONSTRAINT IF EXISTS fk_ae_type CASCADE;
ALTER TABLE agroecological_group_registry."AE_TYPE_PROPERTY" ADD CONSTRAINT fk_ae_type FOREIGN KEY (ae_type_id)
REFERENCES agroecological_group_registry."AE_TYPE" (ae_type_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_cultivar | type: CONSTRAINT --
-- ALTER TABLE crop_cultivar_registry."CROP_CULTIVAR_PROPERTY" DROP CONSTRAINT IF EXISTS fk_cultivar CASCADE;
ALTER TABLE crop_cultivar_registry."CROP_CULTIVAR_PROPERTY" ADD CONSTRAINT fk_cultivar FOREIGN KEY (crop_id)
REFERENCES crop_cultivar_registry."CROP_CULTIVAR" (crop_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_zone | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."PROVINCE" DROP CONSTRAINT IF EXISTS fk_zone CASCADE;
ALTER TABLE agroecological_group_registry."PROVINCE" ADD CONSTRAINT fk_zone FOREIGN KEY (zone_id)
REFERENCES agroecological_group_registry."ZONE" (zone_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_region | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT" DROP CONSTRAINT IF EXISTS fk_region CASCADE;
ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT" ADD CONSTRAINT fk_region FOREIGN KEY (administrative_region_id)
REFERENCES agroecological_group_registry."ADMINISTRATIVE_REGION" (administrative_region_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_technology | type: CONSTRAINT --
-- ALTER TABLE agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES" DROP CONSTRAINT IF EXISTS fk_technology CASCADE;
ALTER TABLE agricultural_technologies_registry."TECHNOLOGY_INTENSIFICATION_RESOURCES" ADD CONSTRAINT fk_technology FOREIGN KEY (agrotechnology_id)
REFERENCES agricultural_technologies_registry."AGROTECHNOLOGY" (agrotechnology_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_province | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."PROVINCE_AE_TYPE" DROP CONSTRAINT IF EXISTS fk_province CASCADE;
ALTER TABLE agroecological_group_registry."PROVINCE_AE_TYPE" ADD CONSTRAINT fk_province FOREIGN KEY (province_id)
REFERENCES agroecological_group_registry."PROVINCE" (province_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_ae_type | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."PROVINCE_AE_TYPE" DROP CONSTRAINT IF EXISTS fk_ae_type CASCADE;
ALTER TABLE agroecological_group_registry."PROVINCE_AE_TYPE" ADD CONSTRAINT fk_ae_type FOREIGN KEY (ae_type_id)
REFERENCES agroecological_group_registry."AE_TYPE" (ae_type_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_agro_technology | type: CONSTRAINT --
-- ALTER TABLE agricultural_technologies_registry."TECHNOLOGY_OPERATIONS" DROP CONSTRAINT IF EXISTS fk_agro_technology CASCADE;
ALTER TABLE agricultural_technologies_registry."TECHNOLOGY_OPERATIONS" ADD CONSTRAINT fk_agro_technology FOREIGN KEY (agrotechnology_id)
REFERENCES agricultural_technologies_registry."AGROTECHNOLOGY" (agrotechnology_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_adm_region | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_REGION_ZONE" DROP CONSTRAINT IF EXISTS fk_adm_region CASCADE;
ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_REGION_ZONE" ADD CONSTRAINT fk_adm_region FOREIGN KEY (administrative_region_id)
REFERENCES agroecological_group_registry."ADMINISTRATIVE_REGION" (administrative_region_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_zone | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_REGION_ZONE" DROP CONSTRAINT IF EXISTS fk_zone CASCADE;
ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_REGION_ZONE" ADD CONSTRAINT fk_zone FOREIGN KEY (zone_id)
REFERENCES agroecological_group_registry."ZONE" (zone_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_adm_district | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT_PROVINCE" DROP CONSTRAINT IF EXISTS fk_adm_district CASCADE;
ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT_PROVINCE" ADD CONSTRAINT fk_adm_district FOREIGN KEY (administrative_district_id)
REFERENCES agroecological_group_registry."ADMINISTRATIVE_DISTRICT" (administrative_district_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_province | type: CONSTRAINT --
-- ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT_PROVINCE" DROP CONSTRAINT IF EXISTS fk_province CASCADE;
ALTER TABLE agroecological_group_registry."ADMINISTRATIVE_DISTRICT_PROVINCE" ADD CONSTRAINT fk_province FOREIGN KEY (province_id)
REFERENCES agroecological_group_registry."PROVINCE" (province_id) MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --


